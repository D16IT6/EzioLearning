@using EzioLearning.Share.Validators.Account
@inherits AccountComponentBase
<div class="checkout-form personal-address">
    <div class="personal-info-head">
        <h4>Đổi mật khẩu</h4>
        <p>Chúng tôi sẽ gửi email xác nhận cho bạn khi thay đổi mật khẩu, vì vậy vui lòng đợi email sau khi gửi.</p>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <EditForm FormName="frmChangePassword" Model="ChangePassword" OnValidSubmit="OnChangePassword">
                <FluentValidationValidator/>
                <div class="input-block">
                    <label class="form-label mb-0">Mật khẩu hiện tại</label>
                    <MudTextField @bind-Value="ChangePassword.Password"
                                  InputType="@_passwordInputType"
                                  Adornment="Adornment.End"
                                  AdornmentIcon="@_passwordInputIcon"
                                  OnAdornmentClick="() => TogglePassword(IsPasswordShow,ref _passwordInputIcon,ref _passwordInputType)"
                                  AdornmentAriaLabel="Show Password" />
                    <ValidationMessage class="text-danger mt-1" For="() => ChangePassword.Password" />
                </div>

                <div class="input-block">
                    <label class="form-label mb-0">Mật khẩu mới</label>
                    <MudTextField @bind-Value="ChangePassword.NewPassword"
                                  InputType="@_newPasswordInputType"
                                  Adornment="Adornment.End"
                                  AdornmentIcon="@_newPasswordInputIcon"
                                  OnAdornmentClick="() => TogglePassword(IsNewPasswordShow,ref _newPasswordInputIcon,ref _newPasswordInputType)"
                                  AdornmentAriaLabel="Show Password" />

                    <ValidationMessage class="text-danger mt-1" For="() => ChangePassword.NewPassword" />

                </div>

                <div class="input-block">
                    <label class="form-label mb-0">Xác nhận mật khẩu mới</label>

                    <MudTextField @bind-Value="ChangePassword.ConfirmNewPassword"
                                  InputType="@_confirmPasswordInputType"
                                  Adornment="Adornment.End"
                                  AdornmentIcon="@_confirmPasswordInputIcon"
                                  OnAdornmentClick="() => TogglePassword(IsConfirmPasswordShow,ref _confirmPasswordInputIcon,ref _confirmPasswordInputType)"
                                  AdornmentAriaLabel="Show Password" />

                    <ValidationMessage class="text-danger mt-1" For="() => ChangePassword.ConfirmNewPassword" />
                </div>

                <div class="update-profile save-password">
                    <MudButton Variant="Variant.Outlined" Color="Color.Success" Disabled="@DisabledButton" ButtonType="ButtonType.Submit">
                        @if (DisabledButton)
                        {
                            <Text>
                                Đang xử lý&nbsp;&nbsp;
                            </Text>
                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                        }
                        else
                        {
                            <span>Đổi mật khẩu</span>
                        }
                    </MudButton>

                </div>

            </EditForm>
        </div>
    </div>
</div>